<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hj="clr-namespace:Hjmos.BaseControls.Controls"
    xmlns:interactivity="clr-namespace:Hjmos.BaseControls.Interactivity"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../ListBox.xaml" />
        <ResourceDictionary Source="../../Basic/Geometries.xaml" />
        <ResourceDictionary Source="../Tag.xaml" />
        <ResourceDictionary Source="../ScrollViewer.xaml" />
        <ResourceDictionary Source="../TabControl.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="Tag4CheckComboBoxStyle"
        BasedOn="{StaticResource TagBaseStyle}"
        TargetType="hj:Tag">
        <Setter Property="Margin" Value="0,3,3,0" />
        <Setter Property="Padding" Value="6,3,4,3" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="hj:Tag">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Button
                                Name="ButtonClose"
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Margin="10,0,0,0"
                                Padding="0,4"
                                hj:IconElement.Geometry="{StaticResource CloseGeometry}"
                                Command="interactivity:ControlCommands.Close"
                                Cursor="Hand"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ButtonIcon}"
                                Visibility="{TemplateBinding ShowCloseButton,
                                                             Converter={StaticResource Boolean2VisibilityConverter}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ButtonClose" Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonClose" Property="hj:IconElement.Geometry" Value="{StaticResource DeleteFillCircleGeometry}" />
                            <Setter TargetName="ButtonClose" Property="Padding" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  含有水印的下拉框切换按钮（用于扩展样式中）  -->
    <Style x:Key="TabComboBoxWatermarkToggleButton" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource ThirdlyTextBrush}" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            SnapsToDevicePixels="true" />
                        <Path
                            x:Name="arrow"
                            Grid.Column="1"
                            Margin="7"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{StaticResource DownGeometry}"
                            Fill="{TemplateBinding BorderBrush}"
                            Stretch="Uniform" />
                        <Border
                            Grid.Column="0"
                            Margin="1"
                            Visibility="{Binding ShowPlaceholder, RelativeSource={RelativeSource AncestorType=hj:TabComboBox}, Converter={StaticResource Boolean2VisibilityConverter}}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="{StaticResource UpGeometry}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabCheckComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        <Border
                            Width="{StaticResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            Margin="0,0,6,0"
                            HorizontalAlignment="Right"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                            <Path
                                x:Name="arrow"
                                Width="16"
                                Height="9"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{StaticResource DownGeometry}"
                                Fill="{TemplateBinding BorderBrush}"
                                Stretch="Uniform" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="{StaticResource UpGeometry}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="TabItemListBox"
        BasedOn="{StaticResource ListBoxBaseStyle}"
        TargetType="ListBox">
        <Setter Property="hj:BackgroundSwitchElement.ItemSelectedBackground" Value="#00B2E1" />
        <Setter Property="hj:BackgroundSwitchElement.MouseHoverBackground" Value="#00B2E1" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource ListBoxItemBaseStyle}" TargetType="ListBoxItem">
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=hj:TabComboBox}}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="TabComboBoxTemplate" TargetType="hj:TabComboBox">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                MinWidth="250"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=toggleButton}"
                PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                StaysOpen="False">
                <Border
                    x:Name="dropDownBorder"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid Margin="0,4" ClipToBounds="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="DropDownScrollViewer" Grid.Row="1">
                            <hj:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <!--<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>-->
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" />
                                </Canvas>
                                <TabControl
                                    x:Name="PART_TabPresenter"
                                    Background="Transparent"
                                    Foreground="White"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    TabStripPlacement="Top">
                                    <TabControl.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource TabItemStyle}" TargetType="TabItem">
                                            <Setter Property="Background" Value="#FF085987" />
                                            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=hj:TabComboBox}}" />
                                            <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=hj:TabComboBox}}" />
                                        </Style>
                                    </TabControl.ItemContainerStyle>
                                </TabControl>
                            </hj:SimplePanel>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Style="{StaticResource TabCheckComboBoxToggleButton}" />
            <!--<Border Grid.Column="0" Margin="-1,1">
                <WrapPanel Name="PART_Panel" Margin="5,0,5,3"/>
            </Border>-->
            <hj:ScrollViewer
                Grid.Column="0"
                Margin="-1,1"
                CanMouseWheel="True"
                Orientation="Horizontal">
                <WrapPanel Name="PART_Panel" Margin="5,0,5,3" />
            </hj:ScrollViewer>
            <Path
                x:Name="PathBorder"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Data="{TemplateBinding hj:BorderElement.Geometry}"
                Fill="Transparent"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{TemplateBinding BorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="hj:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
            </Trigger>

            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                <Setter TargetName="PART_Panel" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger Property="hj:BorderElement.Geometry" Value="{x:Null}">
                <Setter TargetName="PathBorder" Property="Visibility" Value="Collapsed" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  标题在顶部的下拉框模板  -->
    <ControlTemplate x:Key="TabComboBoxTopTemplate" TargetType="hj:TabComboBox">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(hj:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(hj:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                Orientation="Horizontal"
                Visibility="{Binding Path=(hj:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <TextBlock
                    Margin="1,0,0,0"
                    FontSize="{TemplateBinding FontSize}"
                    Text="{Binding Path=(hj:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(hj:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(hj:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </StackPanel>
            <Popup
                x:Name="PART_Popup"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                MinWidth="250"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=toggleButton}"
                PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                StaysOpen="False">
                <Border
                    x:Name="dropDownBorder"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid Margin="0,4" ClipToBounds="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="DropDownScrollViewer" Grid.Row="1">
                            <hj:SimplePanel RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <!--<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>-->
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" />
                                </Canvas>
                                <TabControl
                                    x:Name="PART_TabPresenter"
                                    Background="Transparent"
                                    Foreground="White"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    TabStripPlacement="Top">
                                    <TabControl.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource TabItemStyle}" TargetType="TabItem">
                                            <Setter Property="Background" Value="#FF085987" />
                                            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=hj:TabComboBox}}" />
                                            <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=hj:TabComboBox}}" />
                                        </Style>
                                    </TabControl.ItemContainerStyle>
                                </TabControl>
                            </hj:SimplePanel>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Popup>
            <!--<ToggleButton Grid.Column="0" Grid.Row="1" x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" Style="{StaticResource CheckComboBoxToggleButton}"/>-->
            <ToggleButton
                x:Name="toggleButton"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Padding="{TemplateBinding Padding}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Content="{Binding Path=(hj:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource TabComboBoxWatermarkToggleButton}" />
            <hj:ScrollViewer
                Grid.Row="1"
                Grid.Column="0"
                Margin="-1,1"
                CanMouseWheel="True"
                Orientation="Horizontal">
                <WrapPanel Name="PART_Panel" Margin="5,0,5,3" />
            </hj:ScrollViewer>
            <Path
                x:Name="PathBorder"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Data="{TemplateBinding hj:BorderElement.Geometry}"
                Fill="Transparent"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{TemplateBinding BorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="hj:DropDownElement.ConsistentWidth" Value="True">
                <Setter TargetName="dropDownBorder" Property="MaxWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
                <Setter TargetName="dropDownBorder" Property="MinWidth" Value="{Binding ActualWidth, ElementName=toggleButton}" />
            </Trigger>

            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="toggleButton" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="toggleButton" Property="Opacity" Value="0.4" />
                <Setter TargetName="PART_Panel" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger Property="hj:BorderElement.Geometry" Value="{x:Null}">
                <Setter TargetName="PathBorder" Property="Visibility" Value="Collapsed" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>





    <Style x:Key="TabComboBoxBaseStyle" TargetType="hj:TabComboBox">
        <Setter Property="TagStyle" Value="{StaticResource Tag4CheckComboBoxStyle}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Template" Value="{StaticResource TabComboBoxTemplate}" />
        <Setter Property="hj:BorderElement.CornerRadius" Value="4" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>



    <Style
        x:Key="TabComboBoxExtendBaseStyle"
        BasedOn="{StaticResource TabComboBoxBaseStyle}"
        TargetType="hj:TabComboBox">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource TabComboBoxTopTemplate}" />
        <Setter Property="hj:InfoElement.Symbol" Value="●" />
        <Setter Property="hj:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="hj:InfoElement.MinContentHeight" Value="30" />
    </Style>



</ResourceDictionary>