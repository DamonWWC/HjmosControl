<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hj="clr-namespace:Hjmos.BaseControls.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Border.xaml" />
        <ResourceDictionary Source="../../Basic/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SineEase x:Key="SineEaseOut" EasingMode="EaseOut" />

    <ControlTemplate x:Key="BadgeTextTemplate" TargetType="hj:Badge">
        <hj:SimplePanel>
            <ContentPresenter />
            <Border
                x:Name="Border1"
                Margin="{TemplateBinding BadgeMargin}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                RenderTransformOrigin="0.5 0.5"
                Style="{StaticResource BorderCircular}"
                Visibility="{TemplateBinding ShowBadge,
                                             Converter={StaticResource Boolean2VisibilityConverter}}">
                <Border.RenderTransform>
                    <ScaleTransform />
                </Border.RenderTransform>
                <ContentPresenter Margin="{TemplateBinding Padding}" ContentSource="Text" />
            </Border>
        </hj:SimplePanel>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="hj:Badge.ValueChanged">
                <BeginStoryboard>
                    <Storyboard AutoReverse="True">
                        <DoubleAnimation
                            BeginTime="0"
                            EasingFunction="{StaticResource SineEaseOut}"
                            Storyboard.TargetName="Border1"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                            From="1"
                            To="1.2"
                            Duration="0:0:.1" />
                        <DoubleAnimation
                            BeginTime="0"
                            EasingFunction="{StaticResource SineEaseOut}"
                            Storyboard.TargetName="Border1"
                            Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                            From="1"
                            To="1.2"
                            Duration="0:0:.1" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BadgeDotTemplate" TargetType="hj:Badge">
        <hj:SimplePanel>
            <ContentPresenter />
            <Border
                Width="10"
                Height="10"
                Margin="{TemplateBinding BadgeMargin}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="5"
                Visibility="{TemplateBinding ShowBadge,
                                             Converter={StaticResource Boolean2VisibilityConverter}}" />
        </hj:SimplePanel>
    </ControlTemplate>

    <ControlTemplate x:Key="BadgeProcessingTemplate" TargetType="hj:Badge">
        <hj:SimplePanel>
            <ContentPresenter />
            <Ellipse
                Width="10"
                Height="10"
                Margin="{TemplateBinding BadgeMargin}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Fill="{TemplateBinding Background}"
                RenderTransformOrigin="0.5 0.5"
                Visibility="{TemplateBinding ShowBadge,
                                             Converter={StaticResource Boolean2VisibilityConverter}}">
                <Ellipse.OpacityMask>
                    <RadialGradientBrush>
                        <GradientStop Offset="0" Color="Transparent" />
                        <GradientStop Offset="1" Color="Black" />
                    </RadialGradientBrush>
                </Ellipse.OpacityMask>
                <Ellipse.RenderTransform>
                    <ScaleTransform />
                </Ellipse.RenderTransform>
                <Ellipse.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard DesiredFrameRate="20" RepeatBehavior="Forever">
                                <DoubleAnimation
                                    BeginTime="0"
                                    EasingFunction="{StaticResource SineEaseOut}"
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                    From="1"
                                    To="2"
                                    Duration="0:0:1" />
                                <DoubleAnimation
                                    BeginTime="0"
                                    EasingFunction="{StaticResource SineEaseOut}"
                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                    From="1"
                                    To="2"
                                    Duration="0:0:1" />
                                <DoubleAnimation
                                    BeginTime="0"
                                    EasingFunction="{StaticResource SineEaseOut}"
                                    Storyboard.TargetProperty="Opacity"
                                    From="1"
                                    To="0"
                                    Duration="0:0:1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Ellipse.Triggers>
            </Ellipse>
            <Border
                Width="10"
                Height="10"
                Margin="{TemplateBinding BadgeMargin}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="5"
                Visibility="{TemplateBinding ShowBadge,
                                             Converter={StaticResource Boolean2VisibilityConverter}}" />
        </hj:SimplePanel>
    </ControlTemplate>

    <Style x:Key="BadgeBaseStyle" TargetType="hj:Badge">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource RegionBrush}" />
        <Setter Property="Padding" Value="6,2" />
        <Setter Property="Template" Value="{StaticResource BadgeTextTemplate}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BadgeMargin" Value="0,-10,-10,0" />
        <Style.Triggers>
            <Trigger Property="Status" Value="Dot">
                <Setter Property="Template" Value="{StaticResource BadgeDotTemplate}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BadgeMargin" Value="0,-5,-5,0" />
            </Trigger>
            <Trigger Property="Status" Value="Processing">
                <Setter Property="Template" Value="{StaticResource BadgeProcessingTemplate}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                <Setter Property="BadgeMargin" Value="0,-5,-5,0" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>