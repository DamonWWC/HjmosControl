<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hj="clr-namespace:Hjmos.BaseControls.Controls"
    xmlns:interactivity="clr-namespace:Hjmos.BaseControls.Interactivity">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Basic/Geometries.xaml" />
        <ResourceDictionary Source="../Rectangle.xaml" />
        <ResourceDictionary Source="../Border.xaml" />
        <ResourceDictionary Source="../Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ImageSelectorBaseStyle" TargetType="hj:ImageSelector">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Stretch" Value="UniformToFill" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="StrokeDashArray" Value="2,2" />
        <Setter Property="hj:IconSwitchElement.Geometry" Value="{StaticResource AddGeometry}" />
        <Setter Property="hj:IconSwitchElement.GeometrySelected" Value="{StaticResource RemoveGeometry}" />
        <Setter Property="hj:BorderElement.CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="hj:ImageSelector">
                    <Button
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Command="interactivity:ControlCommands.Switch"
                        Style="{StaticResource ButtonCustom}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                            <hj:DashedBorder
                                Background="{TemplateBinding PreviewBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderDashArray="{TemplateBinding StrokeDashArray}"
                                BorderDashThickness="{TemplateBinding StrokeThickness}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                <Border
                                    Width="30"
                                    Height="30"
                                    Background="{TemplateBinding Background}"
                                    Style="{StaticResource BorderCircular}">
                                    <hj:ToggleBlock IsChecked="{TemplateBinding HasValue}">
                                        <hj:ToggleBlock.CheckedContent>
                                            <Path
                                                Width="12"
                                                Height="12"
                                                Data="{TemplateBinding hj:IconSwitchElement.GeometrySelected}"
                                                Fill="{DynamicResource PrimaryBrush}" />
                                        </hj:ToggleBlock.CheckedContent>
                                        <hj:ToggleBlock.UnCheckedContent>
                                            <Path
                                                Width="16"
                                                Height="16"
                                                Data="{TemplateBinding hj:IconSwitchElement.Geometry}"
                                                Fill="{DynamicResource PrimaryBrush}" />
                                        </hj:ToggleBlock.UnCheckedContent>
                                    </hj:ToggleBlock>
                                </Border>
                            </hj:DashedBorder>
                        </Border>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageButtonBaseStyle" TargetType="hj:ImageButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="StrokeDashArray" Value="2,2" />
        <Setter Property="hj:BorderElement.CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="hj:ImageButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <hj:DashedBorder
                            Background="{TemplateBinding PreviewBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderDashArray="{TemplateBinding StrokeDashArray}"
                            BorderDashThickness="{TemplateBinding StrokeThickness}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(hj:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>