<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Hjmos.BaseControls.Controls"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Basic/Converters.xaml" />
        <ResourceDictionary Source="../../Basic/Geometries.xaml" />
        <ResourceDictionary Source="../Button.xaml" />
    </ResourceDictionary.MergedDictionaries>



    <Style x:Key="DateTimePickerBaseStyle" TargetType="controls:DateTimePicker">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="controls:BorderElement.CornerRadius" Value="4" />
        <Setter Property="Padding" Value="10,6" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:DateTimePicker">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid
                            x:Name="PART_Root"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>
                            <Button
                                x:Name="PART_Button"
                                Grid.Row="0"
                                Grid.Column="1"
                                Height="{x:Static system:Double.NaN}"
                                Padding="7,6"
                                controls:IconElement.Geometry="{StaticResource ClockGeometry}"
                                Focusable="False"
                                Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                                Style="{StaticResource ButtonIcon}" />
                            <controls:WatermarkTextBox
                                x:Name="PART_TextBox"
                                Grid.Row="0"
                                Grid.Column="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="{TemplateBinding Focusable}"
                                Foreground="{TemplateBinding Foreground}" />
                            <Popup
                                x:Name="PART_Popup"
                                Grid.Column="0"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=PART_TextBox}"
                                PopupAnimation="Fade"
                                StaysOpen="False"
                                TextElement.FontSize="12"
                                VerticalOffset="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </MultiTrigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="DateTimePickerExtendTopTemplate" TargetType="controls:DateTimePicker">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(controls:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(controls:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <StackPanel
                Margin="{TemplateBinding Padding}"
                Orientation="Horizontal"
                Visibility="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <TextBlock
                    Margin="1,0,0,0"
                    FontSize="{TemplateBinding FontSize}"
                    Text="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(controls:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(controls:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </StackPanel>
            <Border
                x:Name="templateRoot"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid
                    x:Name="PART_Root"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Name="PART_Button"
                        Grid.Row="0"
                        Grid.Column="1"
                        Height="{x:Static system:Double.NaN}"
                        Padding="7,6"
                        controls:IconElement.Geometry="{StaticResource ClockGeometry}"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}" />
                    <controls:WatermarkTextBox
                        x:Name="PART_TextBox"
                        Grid.Row="0"
                        Grid.Column="0"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="{TemplateBinding Focusable}"
                        Foreground="{TemplateBinding Foreground}"
                        Watermark="{Binding Path=(controls:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                    <Popup
                        x:Name="PART_Popup"
                        Grid.Column="0"
                        Placement="Bottom"
                        PlacementTarget="{Binding ElementName=PART_TextBox}"
                        PopupAnimation="Fade"
                        StaysOpen="False"
                        TextElement.FontSize="12"
                        VerticalOffset="1" />
                </Grid>
            </Border>
            <Path
                x:Name="PathBorder"
                Grid.Row="1"
                Data="{TemplateBinding controls:BorderElement.Geometry}"
                Fill="Transparent"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{TemplateBinding BorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="templateRoot" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="templateRoot" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="controls:BorderElement.Geometry" Value="{x:Null}">
                <Setter TargetName="PathBorder" Property="Visibility" Value="Collapsed" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="DateTimePickerExtendLeftTemplate" TargetType="controls:DateTimePicker">
        <Grid Height="{Binding Path=(controls:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(controls:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(controls:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel
                Margin="0,7,6,7"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Orientation="Horizontal"
                Visibility="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <TextBlock Text="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(controls:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(controls:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </StackPanel>
            <Border
                x:Name="templateRoot"
                Grid.Column="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid
                    x:Name="PART_Root"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Name="PART_Button"
                        Grid.Row="0"
                        Grid.Column="1"
                        Height="{x:Static system:Double.NaN}"
                        Padding="7,6"
                        controls:IconElement.Geometry="{StaticResource ClockGeometry}"
                        Focusable="False"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}" />
                    <controls:WatermarkTextBox
                        x:Name="PART_TextBox"
                        Grid.Row="0"
                        Grid.Column="0"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="{TemplateBinding Focusable}"
                        Foreground="{TemplateBinding Foreground}"
                        Watermark="{Binding Path=(controls:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                    <Popup
                        x:Name="PART_Popup"
                        Grid.Column="0"
                        Placement="Bottom"
                        PlacementTarget="{Binding ElementName=PART_TextBox}"
                        PopupAnimation="Fade"
                        StaysOpen="False"
                        TextElement.FontSize="12"
                        VerticalOffset="1" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="templateRoot" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="templateRoot" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="DateTimePickerExtendBaseStyle"
        BasedOn="{StaticResource DateTimePickerBaseStyle}"
        TargetType="controls:DateTimePicker">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="controls:InfoElement.Symbol" Value="●" />
        <Setter Property="controls:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="controls:InfoElement.MinContentHeight" Value="30" />
        <Setter Property="Template" Value="{StaticResource DateTimePickerExtendTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="controls:InfoElement.TitleAlignment" Value="Left">
                <Setter Property="Template" Value="{StaticResource DateTimePickerExtendLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>