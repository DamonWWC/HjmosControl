<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Hjmos.BaseControls.Controls"
    xmlns:interactivity="clr-namespace:Hjmos.BaseControls.Interactivity"
    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Basic/Geometries.xaml" />
        <ResourceDictionary Source="../../Basic/Converters.xaml" />
        <ResourceDictionary Source="../TextBlock.xaml" />
        <ResourceDictionary Source="../Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WatermarkTextBoxBaseStyle" TargetType="controls:WatermarkTextBox">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CaretBrush" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:WatermarkTextBox">
                    <controls:SimplePanel x:Name="WatermarkContent">
                        <TextBlock
                            x:Name="PART_Watermark"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{DynamicResource ThirdlyTextBrush}"
                            Text="{TemplateBinding Watermark}"
                            Visibility="{TemplateBinding Text,
                                                         Converter={StaticResource String2VisibilityReConverter}}" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="-2,0,-1,0"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </controls:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxBaseStyle" TargetType="TextBox">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <!--  文本框内光变颜色  -->
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="controls:BorderElement.CornerRadius" Value="4" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding controls:BorderElement.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="-2,0,-1,0"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value=".4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditTextBoxBaseStyle" TargetType="TextBox">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <!--  文本框内光变颜色  -->
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="controls:BorderElement.CornerRadius" Value="0" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding controls:BorderElement.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="-2,0,-1,0"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="False">
                            <Setter Property="IsEnabled" Value="True" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TextBoxExtendTopTemplate" TargetType="TextBox">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(controls:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(controls:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <StackPanel
                Margin="{TemplateBinding Padding}"
                Orientation="Horizontal"
                Visibility="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <TextBlock
                    Margin="1,0,0,0"
                    FontSize="{TemplateBinding FontSize}"
                    Text="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(controls:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(controls:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </StackPanel>
            <Border
                x:Name="border"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="True" />
            <TextBlock
                x:Name="Placeholder"
                Grid.Row="1"
                Margin="{TemplateBinding Padding}"
                Padding="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Style="{StaticResource TextBlockDefaultThiLight}"
                Text="{Binding Path=(controls:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{TemplateBinding Text,
                                             Converter={StaticResource String2VisibilityReConverter}}" />
            <ScrollViewer
                x:Name="PART_ContentHost"
                Grid.Row="1"
                Margin="-1,1"
                Padding="{TemplateBinding Padding}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="false"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden" />
            <Path
                x:Name="PathBorder"
                Grid.Row="1"
                Data="{TemplateBinding controls:BorderElement.Geometry}"
                Fill="Transparent"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{TemplateBinding BorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.4" />
                <Setter TargetName="Placeholder" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="PART_ContentHost" Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="controls:BorderElement.Geometry" Value="{x:Null}">
                <Setter TargetName="PathBorder" Property="Visibility" Value="Collapsed" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxExtendLeftTemplate" TargetType="TextBox">
        <Grid Height="{Binding Path=(controls:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(controls:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(controls:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel
                Margin="0,7,6,7"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Orientation="Horizontal"
                Visibility="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <TextBlock Text="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}" />
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(controls:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(controls:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
            </StackPanel>
            <Border
                x:Name="border"
                Grid.Column="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="True" />
            <TextBlock
                x:Name="Placeholder"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                Padding="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Style="{StaticResource TextBlockDefaultThiLight}"
                Text="{Binding Path=(controls:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{TemplateBinding Text,
                                             Converter={StaticResource String2VisibilityReConverter}}" />
            <ScrollViewer
                x:Name="PART_ContentHost"
                Grid.Column="1"
                Margin="-1,1"
                Padding="{TemplateBinding Padding}"
                Focusable="false"
                HorizontalScrollBarVisibility="Hidden"
                VerticalScrollBarVisibility="Hidden" />
            <Path
                x:Name="PathBorder"
                Grid.Row="1"
                Data="{TemplateBinding controls:BorderElement.Geometry}"
                Fill="Transparent"
                SnapsToDevicePixels="True"
                Stretch="Fill"
                Stroke="{TemplateBinding BorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="0.4" />
                <Setter TargetName="Placeholder" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="PART_ContentHost" Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="controls:BorderElement.Geometry" Value="{x:Null}">
                <Setter TargetName="PathBorder" Property="Visibility" Value="Collapsed" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="TextBoxExtendBaseStyle"
        BasedOn="{StaticResource TextBoxBaseStyle}"
        TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="controls:InfoElement.Symbol" Value="●" />
        <Setter Property="controls:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="controls:InfoElement.MinContentHeight" Value="30" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="CaretBrush" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template" Value="{StaticResource TextBoxExtendTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="controls:InfoElement.TitleAlignment" Value="Left">
                <Setter Property="Template" Value="{StaticResource TextBoxExtendLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style
        x:Key="TextBoxPlusIcon"
        BasedOn="{StaticResource TextBoxBaseStyle}"
        TargetType="controls:TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TextBox">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardShow">
                            <ThicknessAnimation
                                Storyboard.TargetName="TextBlockError"
                                Storyboard.TargetProperty="Margin"
                                To="9,0,0,-18"
                                Duration="0:0:.2" />
                        </Storyboard>
                        <Storyboard x:Key="StoryboardHidden">
                            <ThicknessAnimation
                                Storyboard.TargetName="TextBlockError"
                                Storyboard.TargetProperty="Margin"
                                To="9,0,0,4"
                                Duration="0:0:0" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{TemplateBinding controls:InfoElement.TitleWidth}" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Name="TextBlockError"
                            Grid.Column="1"
                            Margin="9,0,0,4"
                            VerticalAlignment="Bottom"
                            FontSize="12"
                            Foreground="{DynamicResource DangerBrush}"
                            Text="{TemplateBinding ErrorStr}" />
                        <TextBlock
                            x:Name="Title"
                            Grid.Column="0"
                            Margin="0,7,6,7"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding controls:InfoElement.Title}"
                            Visibility="{TemplateBinding controls:InfoElement.Title,
                                                         Converter={StaticResource String2VisibilityConverter}}" />
                        <Border
                            x:Name="templateRoot"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding controls:BorderElement.CornerRadius}"
                            SnapsToDevicePixels="True">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    x:Name="PathMain"
                                    Grid.Column="0"
                                    Width="{TemplateBinding controls:IconElement.Width}"
                                    Height="{TemplateBinding controls:IconElement.Height}"
                                    Data="{TemplateBinding controls:IconElement.Geometry}"
                                    Fill="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="True"
                                    Stretch="Uniform" />
                                <controls:SimplePanel Grid.Column="1">
                                    <TextBlock
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Style="{StaticResource TextBlockDefaultThiLight}"
                                        Text="{TemplateBinding controls:InfoElement.Placeholder}"
                                        Visibility="{TemplateBinding Text,
                                                                     Converter={StaticResource String2VisibilityReConverter}}" />
                                    <ScrollViewer
                                        x:Name="PART_ContentHost"
                                        Margin="-2,0,-1,0"
                                        Padding="{TemplateBinding Padding}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden" />
                                </controls:SimplePanel>
                                <Button
                                    Name="ButtonClear"
                                    Grid.Column="2"
                                    Width="16"
                                    Height="NaN"
                                    Margin="0,0,7,0"
                                    Padding="0,6"
                                    controls:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                                    Command="interactivity:ControlCommands.Clear"
                                    Foreground="Black"
                                    Style="{StaticResource ButtonIcon}"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="templateRoot" Property="IsMouseOver" Value="True" />
                                <Condition Property="ShowClearButton" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PathMain" Property="Fill" Value="#FF13FFF5"/>
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF13FFF5"/>
                            <!--<Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />-->
                        </Trigger>
                        <Trigger Property="controls:IconElement.Geometry" Value="{x:Null}">
                            <Setter TargetName="PathMain" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="controls:InfoElement.Title" Value="{x:Null}">
                            <Setter Property="controls:InfoElement.TitleWidth" Value="0" />
                        </Trigger>
                        <Trigger Property="IsError" Value="True">
                            <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardShow}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardHidden}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TextBoxPlusTopTemplate" TargetType="controls:TextBox">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardShow">
                <ThicknessAnimation
                    Storyboard.TargetName="TextBlockError"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,-18"
                    Duration="0:0:.2" />
            </Storyboard>
            <Storyboard x:Key="StoryboardHidden">
                <ThicknessAnimation
                    Storyboard.TargetName="TextBlockError"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,4"
                    Duration="0:0:0" />
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding Path=(controls:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}" MinHeight="{Binding Path=(controls:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <TextBlock
                Name="TextBlockError"
                Grid.Row="1"
                Margin="9,0,0,4"
                VerticalAlignment="Bottom"
                FontSize="12"
                Foreground="{DynamicResource DangerBrush}"
                Text="{TemplateBinding ErrorStr}" />
            <DockPanel
                Grid.Row="0"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{Binding Path=(controls:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(controls:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(controls:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    Margin="1,0,1,0"
                    controls:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="templateRoot"
                Grid.Row="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="True">
                <Grid SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Style="{StaticResource TextBlockDefaultThiLight}"
                        Text="{Binding Path=(controls:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{TemplateBinding Text,
                                                     Converter={StaticResource String2VisibilityReConverter}}" />
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Grid.Column="0"
                        Margin="-2,0,-1,0"
                        Padding="{TemplateBinding Padding}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                    <Button
                        Name="ButtonClear"
                        Grid.Column="1"
                        Width="16"
                        Height="{x:Static system:Double.NaN}"
                        Margin="0,0,7,0"
                        Padding="0,6"
                        controls:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                        Command="interactivity:ControlCommands.Clear"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="Collapsed" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="templateRoot" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="templateRoot" Property="IsMouseOver" Value="true" />
                    <Condition Property="ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsError" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardShow}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardHidden}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxPlusLeftTemplate" TargetType="controls:TextBox">
        <ControlTemplate.Resources>
            <Storyboard x:Key="StoryboardShow">
                <ThicknessAnimation
                    Storyboard.TargetName="TextBlockError"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,-18"
                    Duration="0:0:.2" />
            </Storyboard>
            <Storyboard x:Key="StoryboardHidden">
                <ThicknessAnimation
                    Storyboard.TargetName="TextBlockError"
                    Storyboard.TargetProperty="Margin"
                    To="9,0,0,4"
                    Duration="0:0:0" />
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Height="{Binding Path=(controls:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding Path=(controls:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(controls:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock
                Name="TextBlockError"
                Grid.Column="1"
                Margin="9,0,0,4"
                VerticalAlignment="Bottom"
                FontSize="12"
                Foreground="{DynamicResource DangerBrush}"
                Text="{TemplateBinding ErrorStr}" />
            <DockPanel
                Grid.Column="0"
                Margin="0,7,6,7"
                VerticalAlignment="{Binding Path=(controls:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(controls:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(controls:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    controls:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(controls:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Border
                x:Name="templateRoot"
                Grid.Column="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="True">
                <Grid SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Style="{StaticResource TextBlockDefaultThiLight}"
                        Text="{Binding Path=(controls:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{TemplateBinding Text,
                                                     Converter={StaticResource String2VisibilityReConverter}}" />
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Grid.Column="0"
                        Margin="-2,0,-1,0"
                        Padding="{TemplateBinding Padding}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                    <Button
                        Name="ButtonClear"
                        Grid.Column="1"
                        Width="16"
                        Height="{x:Static system:Double.NaN}"
                        Margin="0,0,7,0"
                        Padding="0,6"
                        controls:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                        Command="interactivity:ControlCommands.Clear"
                        Foreground="{Binding BorderBrush, ElementName=templateRoot}"
                        Style="{StaticResource ButtonIcon}"
                        Visibility="Collapsed" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="templateRoot" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger SourceName="templateRoot" Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="templateRoot" Property="IsMouseOver" Value="true" />
                    <Condition Property="ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsError" Value="true">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource DangerBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardShow}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource StoryboardHidden}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>





    <Style
        x:Key="TextBoxPlusBaseStyle"
        BasedOn="{StaticResource TextBoxExtendBaseStyle}"
        TargetType="controls:TextBox">
        <Setter Property="Template" Value="{StaticResource TextBoxPlusTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="controls:InfoElement.TitleAlignment" Value="Left">
                <Setter Property="Template" Value="{StaticResource TextBoxPlusLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>



</ResourceDictionary>